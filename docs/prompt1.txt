¿Que indicaciones concisas debo dar a un programador profesional experto en todos los lenguajes de programación, para que desarrolle una herramienta las siguientes caracteristicas: 

Lenguaje: Python
Interfaz: Línea de comandos (CLI)
Objetivo: Convertir archivos entre los formatos JSONL (JSON Lines) y JSON estándar
Estructura: Layout src/ con Énfasis en Interfaces Limpias

EJEMPLO DE PLANTILLA COMO DEBES RESPONDER:
Desarrolla una herramienta con las siguientes características:
1. Lenguaje: [Especificar Lenguaje Principal (e.g., Python, Go, Rust, Node.js)]. (Opcional: mencionar si se pueden usar bibliotecas específicas).
2. Interfaz: CLI (Línea de comandos).
3. Objetivo: [Describir de forma clara y concisa el propósito principal de la herramienta. ¿Qué problema resuelve? ¿Qué tarea automatiza?].
	Funcionalidades Clave:
		[Detallar la funcionalidad principal 1: Qué hace, qué entradas requiere (archivos, datos, etc.), qué salidas produce].
		[Detallar la funcionalidad principal 2 (si aplica): Descripción similar].
		[Listar otras funcionalidades o casos de uso importantes].
4. Estructura: Utilizar preferentemente un layout estándar para el lenguaje elegido (e.g., src/ para Python/Node.js, estructura estándar de Go, etc.).
5. Arquitectura: Priorizar interfaces limpias, código modular, mantenible y testeable. Separar claramente responsabilidades (e.g., lógica de negocio/procesamiento, manejo de I/O, interfaz CLI).
6. Parámetros CLI Mínimos: Definir los argumentos y opciones de línea de comandos esenciales para operar la herramienta. Como mínimo, incluir:
	[Parámetro/Opción esencial 1 (e.g., --input <archivo>, --url <direccion>)].
	[Parámetro/Opción esencial 2 (e.g., --output <archivo>, --mode <modo>)].
	[Otras opciones clave necesarias para controlar el comportamiento principal].
	Considerar flags estándar como --version y --help.
	Implementar validación de entradas y manejo de errores robusto con mensajes informativos.